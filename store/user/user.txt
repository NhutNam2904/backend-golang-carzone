package store

import (
	"context"
	"database/sql"
	"errors"

	"github.com/NhutNam2904/carzone/models"
)

type UserStore struct {
	//dba,
	//dbb
	db *sql.DB
}

func New(db *sql.DB) *UserStore {
	return &UserStore{db: db}
}
func (u UserStore) SignUp(ctx context.Context, user *models.User) (models.User, error) {

	var existingUser models.User
	var userID uuid

	query := "SELECT id, first_name, last_name, email, address FROM users WHERE email = $1 OR id = $2 LIMIT 1"

	err = u.db.QueryRowContext(ctx, query, user.Email, user.ID).Scan(

		&existingUser.ID,
		&existingUser.FirstName,
		&existingUser.LastName,
		&existingUser.Email,
		&existingUser.Address,
	)

	if err != nil && err != sql.ErrNoRows {
		return models.User{}, errors.New("failed to check user existence")
	}

	if err == nil {
		return existingUser, errors.New("user already exists")
	}

	query = "INSERT INTO users (id, first_name, last_name, email, password, address) VALUES ($1, $2, $3, $4, $5)"
	err = u.DB.QueryRowContext(ctx, query, userID, user.FirstName, user.LastName, user.Email, user.Password, user.Address)
	//.Scan(&user.ID)
	if err != nil {
		return models.User{}, errors.New("failed to create user")
	}

	// 4. Trả về người dùng vừa tạo
	return user, nil

	user_created := models.User{
		Use:            engineID,
		Displacement:   engineReq.Displacement,
		NoOfCyclinders: engineReq.NoOfCyclinders,
		CarRange:       engineReq.CarRange,
	}

	return user_created, nil

}
